version: '3.8'

services:
  # Authentification Service
  authentification-service:
    build:
      context: ./AuthentificationService
    container_name: authentification-service
    ports:
      - "8083:8083"
    environment:
      DB_URL: ${AUTH_DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    depends_on:
      - auth-db
    networks:
      - app-network

  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  # Profile Manager Service
  profile-manager:
    build:
      context: ./ProfileManager
    container_name: profile-manager
    ports:
      - "8080:8080"
    environment:
      DB_URL: ${PROFILE_MANAGER_DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      - rabbitmq
      - auth-db
    networks:
      - app-network

  # Matching Service
  matching-service:
    build:
      context: ./MatchingService
    container_name: matching-service
    ports:
      - "8081:8081"
    environment:
      DB_URL: ${MATCHING_MANAGER_DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      - rabbitmq
      - auth-db
    networks:
      - app-network

  # Match Retrieval Service
  match-retrieval-service:
    build:
      context: ./MatchRetrivalService
    container_name: match-retrieval-service
    ports:
      - "8087:8087"
    environment:
      DB_URL: ${MATCH_RETRIEVAL_DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    depends_on:
      - auth-db
    networks:
      - app-network

  # Message Service
  message-service:
    build:
      context: ./MessageService
    container_name: message-service
    ports:
      - "8084:8084"
    environment:
      DB_URL: ${MESSAGE_SERVICE_DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      - rabbitmq
      - auth-db
    networks:
      - app-network

  # Gateway Service
  gateway-service:
    build:
      context: ./Gateway
    container_name: gateway-service
    ports:
      - "8000:8000"
    depends_on:
      - authentification-service
      - profile-manager
      - matching-service
      - message-service
    networks:
      - app-network

  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    networks:
      - app-network

volumes:
  auth-db-data:

networks:
  app-network:
    driver: bridge
